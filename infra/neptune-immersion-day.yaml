AWSTemplateFormatVersion: '2010-09-09'

Mappings:
  S3Buckets:
    us-west-1:
      bucket: ee-assets-prod-us-west-1
    us-west-2:
      bucket: ee-assets-prod-us-west-2
    us-east-1:
      bucket: ee-assets-prod-us-east-1
    us-east-2:
      bucket: ee-assets-prod-us-east-2
    eu-central-1:
      bucket: ee-assets-prod-eu-central-1
    eu-west-1:
      bucket: ee-assets-prod-eu-west-1
    eu-west-2:
      bucket: ee-assets-prod-eu-west-2
    eu-west-3:
      bucket: ee-assets-prod-eu-west-3
    ap-south-1:
      bucket: ee-assets-prod-ap-south-1
    ap-northeast-1:
      bucket: ee-assets-prod-ap-northeast-1
    ap-northeast-2:
      bucket: ee-assets-prod-ap-northeast-2
    ap-southeast-1:
      bucket: ee-assets-prod-ap-southeast-1
    ap-southeast-2:
      bucket: ee-assets-prod-ap-southeast-2
    ca-central-1:
      bucket: ee-assets-prod-ca-central-1
    sa-east-1:
      bucket: ee-assets-prod-sa-east-1

  Constants:
    S3Keys:
      neptuneBaseStack: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/templates/basestack/neptune-base-stack-graviton.yaml
      neptuneNotebooks: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/notebooks|00-Workshop-Notebooks-START-HERE/*
      workshoplambda: modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/workshoplambda/workshoplambda.zip
      imdbpgdata: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/data-v2/imdb-pg/
      imdbrdfdata: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/data-v2/imdb-rdf/
      bulkLoadStack: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/templates/bulkloadstack/bulk-load-stack-39.yaml
      sagemakerBaseStack: /modules/f3f89ef4607743429fb01ae23d983197/v1/workshop/templates/basestack/neptune-workbench-stack.yaml

  #------------------------------------------------------------------------------#
  # RESOURCES
  #------------------------------------------------------------------------------#
Resources:
# ---------- CREATING NEPTUNE CLUSTER FROM SNAPSHOT ----------
  NeptuneBaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - neptuneBaseStack
      Parameters:
        NeptuneQueryTimeout: '300000'
        DbInstanceType: db.r5.2xlarge
      TimeoutInMinutes: '360'

# ---------- SETTING UP SAGEMAKER NOTEBOOK INSTANCES ----------
  SageMakerNeptuneStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - sagemakerBaseStack
      Parameters:
        NeptuneClusterEndpoint:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterEndpoint
        NeptuneClusterName:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterId
        NeptuneClusterPort:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterPort
        NeptuneClusterSecurityGroups:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneSecurityGroup
        NeptuneClusterSubnetId:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.PublicSubnet1
        NeptuneResourceId:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterResourceId
        NeptuneS3IAMRole:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneLoadFromS3IAMRoleArn
        NotebookContentS3Locations: !Join
                                          - ''
                                          - - 's3://'
                                            - !FindInMap
                                              - S3Buckets
                                              - !Ref 'AWS::Region'
                                              - bucket
                                            - !FindInMap
                                              - Constants
                                              - S3Keys
                                              - neptuneNotebooks
        NotebookInstanceType: 'ml.t3.medium'
        SageMakerNotebookName: 'workshop-notebooks'
      TimeoutInMinutes: '60'

# ---------- CONNECTING IAM ROLE TO NEPTUNE CLUSTER ----------
  AddIamRoleToNeptuneStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/aws-neptune-customer-samples/neptune-sagemaker/cloudformation-templates/common/add-iam-role-to-neptune.json
      Parameters:
        DBClusterId:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterId
        NeptuneLoadFromS3IAMRoleArn:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneLoadFromS3IAMRoleArn
      TimeoutInMinutes: '60'

# --------- LOAD DATA INTO NEPTUNE ---------

  NeptuneBLPGStack:
    DependsOn:
     - AddIamRoleToNeptuneStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - bulkLoadStack
      Parameters:
        bulkloadNeptuneEndpoint:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterEndpoint
        bulkloadNeptuneData: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - imdbpgdata
        bulkloadNeptuneIAMRole:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneLoadFromS3IAMRoleArn
        bulkloadNeptuneSecurityGroup:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneSecurityGroup
        bulkloadSubnet1:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.PrivateSubnet1
        bulkloadFormat: 'csv'

  NeptuneBLRDFtack:
    DependsOn:
     - NeptuneBLPGStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - bulkLoadStack
      Parameters:
        bulkloadNeptuneEndpoint:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.DBClusterEndpoint
        bulkloadNeptuneData: !Join
                          - ''
                          - - 'https://s3.amazonaws.com/'
                            - !FindInMap
                              - S3Buckets
                              - !Ref 'AWS::Region'
                              - bucket
                            - !FindInMap
                              - Constants
                              - S3Keys
                              - imdbrdfdata
        bulkloadNeptuneIAMRole:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneLoadFromS3IAMRoleArn
        bulkloadNeptuneSecurityGroup:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.NeptuneSecurityGroup
        bulkloadSubnet1:
          Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.PrivateSubnet1
        bulkloadFormat: 'nquads'

# --------- DEFINING API GATEWAY RESOURCES ---------
  workshopAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Join ["-", [ "neptuneworkshop", !Ref "AWS::StackName"]]
      Description: API Gateway for Neptune Workshop - sample graph application.

# ---------- DEFINING LAMBDA FUNCTION TO ACCESS NEPTUNE ----------
  workshopLambdaRoleCloudWatch:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: arn:aws:logs:::*
        Version: '2012-10-17'
      PolicyName: workshopLambdaRoleCloudWatch
      Roles:
      - Ref: workshopLambdaRole
    Type: AWS::IAM::Policy
  workshopLambdaRoleEC2:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:CreateNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DeleteNetworkInterface
          - ec2:DetachNetworkInterface
          Effect: Allow
          Resource: "*"
        Version: '2012-10-17'
      PolicyName: workshopLambdaRoleEC2
      Roles:
      - Ref: workshopLambdaRole
    Type: AWS::IAM::Policy
  workshopLambdaRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
    Type: AWS::IAM::Role
  workshopLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !FindInMap
                    - S3Buckets
                    - !Ref 'AWS::Region'
                    - bucket
        S3Key: !FindInMap
                 - Constants
                 - S3Keys
                 - workshoplambda
      Description: 'API to collect recommendations from Neptune.'
      Environment:
        Variables:
          neptunedb:
            Fn::GetAtt:
              - NeptuneBaseStack
              - Outputs.DBClusterEndpoint
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - workshopLambdaRole
        - Arn
      Runtime: python3.9
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
        - Ref: workshopSecGroup
        SubnetIds:
          - Fn::GetAtt:
            - NeptuneBaseStack
            - Outputs.PublicSubnet1

  workshopSecGroup:
    Properties:
      GroupDescription: Security group for Lambda function to reach Neptune.
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 8182
        IpProtocol: tcp
        ToPort: 8182
      VpcId:
        Fn::GetAtt:
          - NeptuneBaseStack
          - Outputs.VPC
    Type: AWS::EC2::SecurityGroup

  workshopApi1PermissionProd:
    DependsOn: workshopMethod
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Ref: workshopLambda
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/GET/actor
        - __ApiId__:
            Ref:  workshopAPI

  workshopResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - workshopAPI
          - RootResourceId
      PathPart: actor
      RestApiId:
        Ref: workshopAPI

  workshopMethod:
    DependsOn: workshopResource
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: workshopAPI
      ResourceId:
        Ref: workshopResource
      RequestParameters:
        method.request.querystring.actor: True
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${workshopLambda.Arn}/invocations
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty

  workshopAPIProd:
    DependsOn: [ workshopMethod ]
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: workshopAPI
      StageName: Prod

  #---------- CREATE CUSTOM RESOURCE TO LOAD IMDB PROPERTY GRAPH DATA -----------#



  #------------------------------------------------------------------------------#
  # OUTPUTS
  #------------------------------------------------------------------------------#

Outputs:
  VPC:
    Description: VPC of the Neptune Cluster
    Value:
      Fn::GetAtt:
        - NeptuneBaseStack
        - Outputs.VPC
  PublicSubnet1:
    Value:
      Fn::GetAtt:
        - NeptuneBaseStack
        - Outputs.PublicSubnet1
  NeptuneSG:
    Description: Neptune Security Group
    Value:
      Fn::GetAtt:
        - NeptuneBaseStack
        - Outputs.NeptuneSecurityGroup
  SageMakerNotebook:
    Value:
      Fn::GetAtt:
      - SageMakerNeptuneStack
      - Outputs.NeptuneNotebook
  DBClusterEndpoint:
    Description: Master Endpoint for Neptune Cluster
    Value:
      Fn::GetAtt:
      - NeptuneBaseStack
      - Outputs.DBClusterEndpoint
  DBInstanceEndpoint:
    Description: Master Instance Endpoint
    Value:
      Fn::GetAtt:
      - NeptuneBaseStack
      - Outputs.DBInstanceEndpoint
  GremlinEndpoint:
    Description: Gremlin Endpoint for Neptune
    Value:
      Fn::GetAtt:
      - NeptuneBaseStack
      - Outputs.GremlinEndpoint
  LoaderEndpoint:
    Description: Loader Endpoint for Neptune
    Value:
      Fn::GetAtt:
      - NeptuneBaseStack
      - Outputs.LoaderEndpoint
  DBClusterReadEndpoint:
    Description: DB cluster Read Endpoint
    Value:
      Fn::GetAtt:
      - NeptuneBaseStack
      - Outputs.DBClusterReadEndpoint
